# schema.graphql

type Question
  @model
  @auth(rules: [
    # Everyone can read questions
    { allow: public, operations: [read] },

    # Only you (the admin) can create/update/delete questions
    { allow: owner, ownerField: "owner", ownerField: "owner", identityClaim: "cognito:username", operations: [create, update, delete] },

    # Optional: if you want to allow adding additional admins by group later
    { allow: groups, groups: ["Admins"], operations: [create, update, delete] }
  ]) {
  id: ID!
  question: String!
  choices: [String!]!
  answer: String!
  explanation: String
  topic: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String @aws_sub # stores the admin's Cognito username or sub
}

type QuizResult
  @model
  @auth(rules: [
    # Each user can access only their own quiz results
    { allow: owner, ownerField: "owner", identityClaim: "cognito:username" }
  ]) {
  id: ID!
  topic: String!
  totalQuestions: Int!
  correctAnswers: Int!
  score: Float!
  questionsAsked: [String]
  userAnswers: AWSJSON
  completedAt: AWSDateTime!
  owner: String @aws_sub # stores the user who created the quiz result
}
